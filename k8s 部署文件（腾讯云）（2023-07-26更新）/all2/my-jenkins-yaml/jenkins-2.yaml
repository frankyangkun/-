apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      nodeName: node2
      #nodeSelector:
      #  app: jenkins
      #imagePullSecrets:
      #  - name: loginharbor
      containers:
        - name: jenkins
          #image: harbor.demo.com:5667/custome-images/jenkins-maven:v1
          image: frankyang1988/jenkins-maven:2.332.3-debian-11-r3
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 0                      #设置以ROOT用户运行容器
            privileged: true
          ports:
            #- containerPort: 8080
            - containerPort: 8088
          volumeMounts:
            - name: jenkins-home
              #mountPath: /var/jenkins_home
              mountPath: /bitnami/jenkins/home
            - name: docker
              mountPath: /run/docker.sock
            - name: docker-home
              mountPath: /usr/bin/docker
            #- name: mvn-setting
            #  mountPath: /usr/local/apache-maven-3.8.5/conf/settings.xml
            #  subPath: settings.xml
            #- name: repository
            #  mountPath: /root/.m2/repository
            - name: daemon
              mountPath: /etc/docker/daemon.json
              subPath: daemon.json
      volumes:
        - name: jenkins-home
          hostPath:
            #path: /mnt/jenkins_home/
            path: /data/devops/jenkins
            type: Directory
        - name: docker
          hostPath:
            path: /run/docker.sock
            type: ""
        - name: docker-home
          hostPath:
            path: /usr/bin/docker
            type: ""
        #- name: mvn-setting
        #  configMap:
        #    name: settings.xml
        #    items:
        #    - key: settings.xml
        #      path: settings.xml
        #- name: repository
        #  hostPath:
        #    path: /mnt/repository
        #    type: ""
        - name: daemon
          hostPath:
            path: /etc/docker/
            type: ""
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins
spec:
  type: NodePort
  ports:
    #- port: 8080
    #  targetPort: 8080
    - port: 8088
      targetPort: 8088
  selector:
    app: jenkins
#---
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: jenkins-ingress
#  labels:
#    name: jenkins-ingress
#spec:
#  ingressClassName: nginx
#  rules:
#  - host: jenkins.demo.com
#    http:
#      paths:
#      - pathType: Prefix
#        path: "/"
#        backend:
#          service:
#            name: jenkins
#            port:
#              number: 8080
